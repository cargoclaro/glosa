// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

// THIS MODEL CAN CHANGE AT ANY TIME BEFORE THE LAUNCH OF THE APP

model User {
  id           String @id @default(uuid())
  name         String
  email        String @unique
  image        String @default("/profilepic.webp")
  password     String
  lastName     String
  patentNumber Int    @unique

  customs UserOnCustom[]
  glosses CustomGloss[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model UserOnCustom {
  user     User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId   String
  custom   Custom @relation(fields: [customId], references: [id], onDelete: Cascade)
  customId String

  @@id([userId, customId])
}

model Custom {
  id        String @id @default(uuid())
  city      String
  latitude  Float
  longitude Float

  users         UserOnCustom[]
  customGlosses CustomGloss[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum OperationStatus {
  IN_PROGRESS
  DONE
}

enum AnalysisType {
  REGULATION
}

model CustomGloss {
  id              String          @id @default(uuid())
  timeSaved       Float
  moneySaved      Float
  isVerified      Boolean
  importerName    String
  analysisType    AnalysisType
  operationStatus OperationStatus @default(IN_PROGRESS)

  user                                        User                                         @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId                                      String
  custom                                      Custom                                       @relation(fields: [customId], references: [id], onDelete: Cascade)
  customId                                    String
  files                                       CustomGlossFile[]
  alerts                                      CustomGlossAlert[]
  report                                      CustomGlossReport?
  customGlossTaxes                            CustomGlossTax[]
  customGlossNonTariffRestrictionNRegulations CustomGlossNonTariffRestrictionNRegulation[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum CustomGlossType {
  LOW
  HIGH
}

model CustomGlossAlert {
  id          String          @id @default(uuid())
  type        CustomGlossType
  description String

  customGloss   CustomGloss @relation(fields: [customGlossId], references: [id], onDelete: Cascade)
  customGlossId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CustomGlossFile {
  id  String @id @default(uuid())
  url String

  customGloss                                        CustomGloss                                      @relation(fields: [customGlossId], references: [id], onDelete: Cascade)
  customGlossId                                      String
  customGlossNonTariffRestrictionNRegulationDetail   CustomGlossNonTariffRestrictionNRegulationDetail @relation(fields: [customGlossNonTariffRestrictionNRegulationDetailId], references: [id], onDelete: Cascade)
  customGlossNonTariffRestrictionNRegulationDetailId String                                           @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum CustomGlossTaxType {
  TARIFF
  IVA
  IEPS
  OTHER
}

model CustomGlossTax {
  id      String             @id @default(uuid())
  tax     Float
  type    CustomGlossTaxType
  isCheck Boolean

  customGloss   CustomGloss @relation(fields: [customGlossId], references: [id], onDelete: Cascade)
  customGlossId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CustomGlossNonTariffRestrictionNRegulation {
  id             String @id @default(uuid())
  law            String
  lawDescription String

  details       CustomGlossNonTariffRestrictionNRegulationDetail[]
  customGloss   CustomGloss                                        @relation(fields: [customGlossId], references: [id])
  customGlossId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CustomGlossNonTariffRestrictionNRegulationDetail {
  id               String  @id @default(uuid())
  field            String
  isCheck          Boolean
  operation        String
  checkDescription String?

  file                                         CustomGlossFile?
  customGlossNonTariffRestrictionNRegulation   CustomGlossNonTariffRestrictionNRegulation @relation(fields: [customGlossNonTariffRestrictionNRegulationId], references: [id], onDelete: Cascade)
  customGlossNonTariffRestrictionNRegulationId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CustomGlossReport {
  id          String @id @default(uuid())
  description String

  customGloss   CustomGloss @relation(fields: [customGlossId], references: [id], onDelete: Cascade)
  customGlossId String      @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
