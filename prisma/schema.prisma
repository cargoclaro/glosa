generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  id           String @id @default(uuid())
  name         String
  email        String @unique
  image        String @default("/assets/images/profilepic.webp")
  password     String
  lastName     String
  patentNumber Int    @unique

  // customs UserOnCustom[]
  glosses CustomGloss[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// model UserOnCustom {
//   user     User   @relation(fields: [userId], references: [id], onDelete: Cascade)
//   userId   String
//   custom   Custom @relation(fields: [customId], references: [id], onDelete: Cascade)
//   customId String

//   @@id([userId, customId])
// }

// model Custom {
//   id        String @id @default(uuid())
//   city      String
//   latitude  Float
//   longitude Float

//   users         UserOnCustom[]
//   customGlosses CustomGloss[]

//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
// }

enum OperationStatus {
  IN_PROGRESS
  DONE
}

model CustomGloss {
  id              String          @id @default(uuid())
  summary         String
  timeSaved       Float
  moneySaved      Float
  importerName    String
  operationStatus OperationStatus @default(IN_PROGRESS)

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String
  // custom   Custom @relation(fields: [customId], references: [id], onDelete: Cascade)
  // customId String

  pedimentNum       CustomGlossPedimentNum?
  operationType     CustomGlossOperationType?
  destinationOrigin CustomGlossDestinationOrigin?
  operation         CustomGlossOperation?
  grossWeight       CustomGlossGrossWeight?
  invoiceData       CustomGlossInvoiceData?
  transportData     CustomGlossTransportData?
  certification     CustomGlossCertification?

  files  CustomGlossFile[]
  alerts CustomGlossAlert[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum CustomGlossType {
  LOW
  HIGH
}

model CustomGlossAlert {
  id          Int             @default(autoincrement())
  type        CustomGlossType
  description String

  customGloss   CustomGloss @relation(fields: [customGlossId], references: [id], onDelete: Cascade)
  customGlossId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@id([id, customGlossId])
}

model CustomGlossFile {
  id   Int    @default(autoincrement())
  name String
  url  String

  customGloss   CustomGloss @relation(fields: [customGlossId], references: [id], onDelete: Cascade)
  customGlossId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@id([id, customGlossId])
}

model CustomGlossPedimentNum {
  id         Int     @default(autoincrement())
  number     BigInt
  status     String
  anio       Int
  isVerified Boolean @default(false)

  customGloss   CustomGloss @relation(fields: [customGlossId], references: [id], onDelete: Cascade)
  customGlossId String      @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@id([id, customGlossId])
}

model CustomGlossOperationType {
  id         Int     @default(autoincrement())
  status     String
  data       String
  appendices String
  isVerified Boolean @default(false)

  customGloss   CustomGloss @relation(fields: [customGlossId], references: [id], onDelete: Cascade)
  customGlossId String      @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@id([id, customGlossId])
}

model CustomGlossDestinationOrigin {
  id                   Int     @default(autoincrement())
  status               String
  destinationOriginKey String
  appendixValidator    String
  appendices           String
  isVerified           Boolean @default(false)

  customGloss   CustomGloss @relation(fields: [customGlossId], references: [id], onDelete: Cascade)
  customGlossId String      @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@id([id, customGlossId])
}

model CustomGlossOperation {
  id           Int     @default(autoincrement())
  status       String
  calculations String
  isVerified   Boolean @default(false)

  customGloss   CustomGloss @relation(fields: [customGlossId], references: [id], onDelete: Cascade)
  customGlossId String      @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@id([id, customGlossId])
}

model CustomGlossGrossWeight {
  id           Int     @default(autoincrement())
  status       String
  calculations String
  isVerified   Boolean @default(false)

  customGloss   CustomGloss @relation(fields: [customGlossId], references: [id], onDelete: Cascade)
  customGlossId String      @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@id([id, customGlossId])
}

model CustomGlossInvoiceData {
  id               Int     @default(autoincrement())
  status           String
  importerExporter String
  supplierBuyer    String
  isVerified       Boolean @default(false)

  customGloss   CustomGloss @relation(fields: [customGlossId], references: [id], onDelete: Cascade)
  customGlossId String      @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@id([id, customGlossId])
}

enum CustomGlossTransportType {
  AIR
  SEA
  LAND
}

model CustomGlossTransportData {
  id         Int                      @default(autoincrement())
  status     String
  type       CustomGlossTransportType
  data       String
  isVerified Boolean                  @default(false)

  customGloss   CustomGloss @relation(fields: [customGlossId], references: [id], onDelete: Cascade)
  customGlossId String      @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@id([id, customGlossId])
}

model CustomGlossCertification {
  id                      Int     @default(autoincrement())
  status                  String
  taxes                   String
  restrictionsRegulations String
  isVerified              Boolean @default(false)

  customGloss   CustomGloss @relation(fields: [customGlossId], references: [id], onDelete: Cascade)
  customGlossId String      @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@id([id, customGlossId])
}
