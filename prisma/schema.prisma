generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  id           String @id @default(uuid())
  name         String
  email        String @unique
  image        String @default("/assets/images/profilepic.webp")
  password     String
  lastName     String
  patentNumber Int    @unique

  // customs UserOnCustom[]
  glosses CustomGloss[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// model UserOnCustom {
//   user     User   @relation(fields: [userId], references: [id], onDelete: Cascade)
//   userId   String
//   custom   Custom @relation(fields: [customId], references: [id], onDelete: Cascade)
//   customId String

//   @@id([userId, customId])
// }

// model Custom {
//   id        String @id @default(uuid())
//   city      String
//   latitude  Float
//   longitude Float

//   users         UserOnCustom[]
//   customGlosses CustomGloss[]

//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
// }

enum OperationStatus {
  IN_PROGRESS
  DONE
}

model CustomGloss {
  id              String          @id @default(uuid())
  summary         String
  timeSaved       Float
  moneySaved      Float
  importerName    String
  operationStatus OperationStatus @default(IN_PROGRESS)

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String
  // custom   Custom @relation(fields: [customId], references: [id], onDelete: Cascade)
  // customId String

  tabs   CustomGlossTab[]
  files  CustomGlossFile[]
  alerts CustomGlossAlert[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum CustomGlossType {
  LOW
  HIGH
}

model CustomGlossAlert {
  id          Int             @default(autoincrement())
  type        CustomGlossType
  description String

  customGloss   CustomGloss @relation(fields: [customGlossId], references: [id], onDelete: Cascade)
  customGlossId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@id([id, customGlossId])
}

model CustomGlossFile {
  id   Int    @default(autoincrement())
  name String
  url  String

  customGloss   CustomGloss @relation(fields: [customGlossId], references: [id], onDelete: Cascade)
  customGlossId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@id([id, customGlossId])
}

model CustomGlossTab {
  id          String  @id @default(uuid())
  name        String
  isCorrect   Boolean
  fullContext String
  isVerified  Boolean @default(false)

  context       CustomGlossTabContext[]
  validations   CustomGlossTabValidationStep[]
  customGloss   CustomGloss                    @relation(fields: [customGlossId], references: [id], onDelete: Cascade)
  customGlossId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([name, customGlossId])
}

enum CustomGlossTabContextType {
  PROVIDED
  EXTERNAL
}

model CustomGlossTabContext {
  id     Int                       @id @default(autoincrement())
  type   CustomGlossTabContextType
  origin String

  data             CustomGlossTabContextData[]
  customGlossTab   CustomGlossTab              @relation(fields: [customGlossTabId], references: [id], onDelete: Cascade)
  customGlossTabId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CustomGlossTabContextData {
  id    Int    @id @default(autoincrement())
  name  String
  value String

  customGlossTabContext   CustomGlossTabContext @relation(fields: [customGlossTabContextId], references: [id], onDelete: Cascade)
  customGlossTabContextId Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CustomGlossTabValidationStep {
  id          Int     @id @default(autoincrement())
  name        String
  description String
  llmAnalysis String
  isCorrect   Boolean
  summary     String

  resources        CustomGlossTabValidationStepResources[]
  actionsToTake    CustomGlossTabValidationStepActionToTake[]
  customGlossTab   CustomGlossTab                             @relation(fields: [customGlossTabId], references: [id], onDelete: Cascade)
  customGlossTabId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CustomGlossTabValidationStepActionToTake {
  id          Int    @id @default(autoincrement())
  description String

  customGlossTabValidationStep   CustomGlossTabValidationStep @relation(fields: [customGlossTabValidationStepId], references: [id], onDelete: Cascade)
  customGlossTabValidationStepId Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CustomGlossTabValidationStepResources {
  id   Int    @id @default(autoincrement())
  link String

  customGlossTabValidationStep   CustomGlossTabValidationStep @relation(fields: [customGlossTabValidationStepId], references: [id], onDelete: Cascade)
  customGlossTabValidationStepId Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
