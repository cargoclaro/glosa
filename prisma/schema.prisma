generator client {
  provider = "prisma-client-js"
}

generator drizzle {
  provider = "drizzle-prisma-generator"
  output   = "../db"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// model UserOnCustom {
//   user     User   @relation(fields: [userId], references: [id], onDelete: Cascade)
//   userId   String
//   custom   Custom @relation(fields: [customId], references: [id], onDelete: Cascade)
//   customId String

//   @@id([userId, customId])
// }

// model Custom {
//   id        String @id @default(uuid())
//   city      String
//   latitude  Float
//   longitude Float

//   users         UserOnCustom[]
//   customGlosses CustomGloss[]

//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
// }

enum OperationStatus {
  IN_PROGRESS
  DONE
}

model CustomGloss {
  id              String             @id @default(uuid())
  summary         String
  timeSaved       Float
  moneySaved      Float
  importerName    String
  operationStatus OperationStatus    @default(IN_PROGRESS)
  userId          String
  tabs            CustomGlossTab[]
  files           CustomGlossFile[]
  alerts          CustomGlossAlert[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum CustomGlossType {
  LOW
  HIGH
  MEDIUM
}

model CustomGlossAlert {
  id          Int             @default(autoincrement())
  type        CustomGlossType
  description String

  customGloss   CustomGloss @relation(fields: [customGlossId], references: [id], onDelete: Cascade)
  customGlossId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@id([id, customGlossId])
}

model CustomGlossFile {
  id           Int     @default(autoincrement())
  name         String
  url          String
  documentType String?

  customGloss   CustomGloss @relation(fields: [customGlossId], references: [id], onDelete: Cascade)
  customGlossId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@id([id, customGlossId])
}

model CustomGlossTab {
  id          String  @id @default(uuid())
  name        String
  summary     String?
  isCorrect   Boolean
  fullContext Boolean
  isVerified  Boolean @default(false)

  context     CustomGlossTabContext[]
  validations CustomGlossTabValidationStep[]

  customGloss   CustomGloss @relation(fields: [customGlossId], references: [id], onDelete: Cascade)
  customGlossId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([name, customGlossId])
}

enum CustomGlossTabContextType {
  PROVIDED
  INFERRED
  EXTERNAL
}

model CustomGlossTabContext {
  id      Int                       @id @default(autoincrement())
  type    CustomGlossTabContextType
  origin  String
  summary String?

  data CustomGlossTabContextData[]

  customGlossTab   CustomGlossTab @relation(fields: [customGlossTabId], references: [id], onDelete: Cascade)
  customGlossTabId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CustomGlossTabContextData {
  id    Int    @id @default(autoincrement())
  name  String
  value String @db.Text

  customGlossTabContext   CustomGlossTabContext @relation(fields: [customGlossTabContextId], references: [id], onDelete: Cascade)
  customGlossTabContextId Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CustomGlossTabValidationStep {
  id          Int      @id @default(autoincrement())
  name        String?
  fraccion    String?
  isCorrect   Boolean?
  description String?
  llmAnalysis String?

  resources     CustomGlossTabValidationStepResources[]
  actionsToTake CustomGlossTabValidationStepActionToTake[]
  steps         CustomGlossTabValidationStep[]             @relation("StepToParent")

  parentStep       CustomGlossTabValidationStep? @relation("StepToParent", fields: [parentStepId], references: [id], onDelete: Cascade)
  parentStepId     Int?
  customGlossTab   CustomGlossTab?               @relation(fields: [customGlossTabId], references: [id], onDelete: Cascade)
  customGlossTabId String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CustomGlossTabValidationStepActionToTake {
  id          Int    @id @default(autoincrement())
  description String

  customGlossTabValidationStep   CustomGlossTabValidationStep @relation(fields: [customGlossTabValidationStepId], references: [id], onDelete: Cascade)
  customGlossTabValidationStepId Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CustomGlossTabValidationStepResources {
  id   Int     @id @default(autoincrement())
  name String?
  link String?

  customGlossTabValidationStep   CustomGlossTabValidationStep @relation(fields: [customGlossTabValidationStepId], references: [id], onDelete: Cascade)
  customGlossTabValidationStepId Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
